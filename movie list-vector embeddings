{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyMbY7gPjwMb2m1vI7BNtL12",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Poojads-udupi/AI--Residency-Gradio/blob/main/movie%20list-vector%20embeddings\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "6r3TsobT-fhy"
      },
      "outputs": [],
      "source": []
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "from sklearn.feature_extraction.text import TfidfVectorizer\n",
        "from sklearn.metrics.pairwise import cosine_similarity\n",
        "import pandas as pd\n",
        "\n",
        "# Load movie data (simplified for this example)\n",
        "movies_df = pd.DataFrame({\n",
        "    'title': ['The Matrix', 'Inception', 'Interstellar'],\n",
        "    'description': [\n",
        "        'A computer programmer discovers a hidden world of AI and machine control.',\n",
        "        'A thief enters people\\'s dreams to plant ideas in their subconscious.',\n",
        "        'Astronauts travel through a wormhole in search of a new home for humanity.'\n",
        "    ]\n",
        "})\n",
        "\n",
        "# Create TF-IDF vectors\n",
        "tfidf = TfidfVectorizer(stop_words='english')\n",
        "tfidf_matrix = tfidf.fit_transform(movies_df['description'])\n",
        "\n",
        "def get_recommendations(movie_title, cosine_sim=cosine_similarity(tfidf_matrix)):\n",
        "    idx = movies_df.index[movies_df['title'] == movie_title].tolist()[0]\n",
        "    sim_scores = list(enumerate(cosine_sim[idx]))\n",
        "    sim_scores = sorted(sim_scores, key=lambda x: x[1], reverse=True)\n",
        "    sim_scores = sim_scores[1:3]  # Get top 2 similar movies\n",
        "    movie_indices = [i[0] for i in sim_scores]\n",
        "    return movies_df['title'].iloc[movie_indices]\n",
        "\n",
        "# Example usage\n",
        "print(get_recommendations('The Matrix'))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "2p55InHp3Zp6",
        "outputId": "8828f602-a5fa-4c32-95c6-5d9f1e77c84f"
      },
      "execution_count": 1,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "1       Inception\n",
            "2    Interstellar\n",
            "Name: title, dtype: object\n"
          ]
        }
      ]
    }
  ]
}